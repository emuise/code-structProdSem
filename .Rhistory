library(sgsR)
#### setup ----
terraOptions(
memfrac = 0.75,
tempdir = "E:\\temp",
todisk = T,
progress = 100
)
options(scipen = 999)
source(here::here("scripts", "get_keys.R"))
vlce <- rast("G:/mosaiced/VLCE2.0/LC_Class_HMM_2015_v20_v20.dat")
bcb <- bcmaps::bc_bound() %>%
vect()
bcb_rast <- bcb %>%
rasterize(y = vlce) %>%
crop(bcb)
vlce <- crop(vlce, bcb_rast) %>%
mask(bcb_rast)
focal_loc <- "G:/mosaiced/focal"
focal_rasts <- focal_loc %>%
list.files(pattern = ".tif$", full.names = T)
focal_for <- focal_rasts %>%
str_subset(pattern = "forests") %>%
rast()
focal_lor <- focal_rasts %>%
str_subset(pattern = "loreys") %>%
rast()
focal_cov <- focal_rasts %>%
str_subset(pattern = "2m") %>%
rast()
change <- rast("G:\\mosaiced\\change_attribution\\Attribution_v2.dat")
change_rcl <- keys$disturbance %>%
mutate(class_name = ifelse(class_val > 0 &
class_val <= 4, 1, NA)) %>%
select(class_val, class_name) %>%
as.matrix(ncol = 2)
change_mask <- classify(change, change_rcl)
bec <- bcmaps::bec()
zones <- keys$bec %>%
pull(zone)
dir.create(here::here("data", "samples"),
recursive = T,
showWarnings = F)
save_name_bec <-
here::here("data", "samples", "bec", paste0(zoi, ".shp"))
save_name_vlce <-
here::here("data", "samples", "vlce", paste0(zoi, "-vlce.shp"))
dir.create(dirname(save_name_bec),
recursive = T,
showWarnings = F)
dir.create(dirname(save_name_vlce),
recursive = T,
showWarnings = F)
plot(zoi_rast, col = "green")
focal_for_mask <- focal_for %>%
crop(zoi_rast)
focal_lor_mask <- focal_lor %>%
crop(zoi_rast)
change_mask_zoi <- change_mask %>%
crop(zoi_rast)
masked <- zoi_rast %>%
mask(focal_for_mask) %>%
mask(focal_lor_mask) %>%
mask(focal_cov_mask) %>%
mask(change_mask_zoi)
names(masked) <- "strata"
print("vlce sampling")
vlce_masked <- vlce %>%
crop(masked) %>%
mask(masked)
names(vlce_masked) <- "strata"
bec <- bcmaps::bec()
zones <- keys$bec %>%
pull(zone)
dir.create(here::here("data", "samples"),
recursive = T,
showWarnings = F)
zoi <- zones[4]
zoi
zones
zoi <- "CWH"
save_name_bec <-
here::here("data", "samples", "bec", paste0(zoi, ".shp"))
print(save_name_bec)
save_name_vlce <-
here::here("data", "samples", "vlce", paste0(zoi, "-vlce.shp"))
print(save_name_vlce)
dir.create(dirname(save_name_bec),
recursive = T,
showWarnings = F)
dir.create(dirname(save_name_vlce),
recursive = T,
showWarnings = F)
zoi_rast <- bec %>%
filter(ZONE == zoi) %>%
rasterize(y = vlce, field = "ZONE") %>%
mask(bcb_rast) %>%
trim()
plot(zoi_rast, col = "green")
focal_for_mask <- focal_for %>%
crop(zoi_rast)
focal_lor_mask <- focal_lor %>%
crop(zoi_rast)
focal_cov_mask <- focal_cov %>%
crop(zoi_rast)
change_mask_zoi <- change_mask %>%
crop(zoi_rast)
masked <- zoi_rast %>%
mask(focal_for_mask) %>%
mask(focal_lor_mask) %>%
mask(focal_cov_mask) %>%
mask(change_mask_zoi)
names(masked) <- "strata"
plot(masked)
plot(masked, col = "green")
vlce_masked <- vlce %>%
crop(masked) %>%
mask(masked)
names(vlce_masked) <- "strata"
plot(vlce_masked)
freq(vlce_masked)
vlce_interest_samples <-
sample_strat(
sraster = vlce_masked,
nSamp = 500,
mindist = 1000,
method = "random" # my focal analysis accounts for the quinnec method from sgsR
)
bec <- bcmaps::bec()
zones <- keys$bec %>%
pull(zone)
dir.create(here::here("data", "samples"),
recursive = T,
showWarnings = F)
for (zoi in zones) {
save_name_bec <-
here::here("data", "samples", "bec", paste0(zoi, ".shp"))
print(save_name_bec)
save_name_vlce <-
here::here("data", "samples", "vlce", paste0(zoi, "-vlce.shp"))
print(save_name_vlce)
dir.create(dirname(save_name_bec),
recursive = T,
showWarnings = F)
dir.create(dirname(save_name_vlce),
recursive = T,
showWarnings = F)
zoi_rast <- bec %>%
filter(ZONE == zoi) %>%
rasterize(y = vlce, field = "ZONE") %>%
mask(bcb_rast) %>%
trim()
plot(zoi_rast, col = "green")
focal_for_mask <- focal_for %>%
crop(zoi_rast)
focal_lor_mask <- focal_lor %>%
crop(zoi_rast)
focal_cov_mask <- focal_cov %>%
crop(zoi_rast)
change_mask_zoi <- change_mask %>%
crop(zoi_rast)
masked <- zoi_rast %>%
mask(focal_for_mask) %>%
mask(focal_lor_mask) %>%
mask(focal_cov_mask) %>%
mask(change_mask_zoi)
names(masked) <- "strata"
print("vlce sampling")
# vlce_masked <- vlce %>%
#   crop(masked) %>%
#   mask(masked)
#
# names(vlce_masked) <- "strata"
#
# plot(vlce_masked)
#
# vlce_interest_samples <-
#   sample_strat(
#     sraster = vlce_masked,
#     nSamp = 500,
#     mindist = 1000,
#     method = "random" # my focal analysis accounts for the quinnec method from sgsR
#   )
#
#
# write_sf(vlce_interest_samples, save_name_vlce)
print("bec sampling")
bec_interest_samples <-
sample_srs(raster = masked,
nSamp = 3000,
mindist = 1000) %>%
mutate(zone = zoi)
write_sf(bec_interest_samples, save_name_bec)
}
remove.packages("sgsR", lib="~/AppData/Local/R/win-library/4.2")
install.packages("sgsR")
install.packages("sgsR")
devtools::install_github("https://github.com/tgoodbody/sgsR")
warnings()
remove.packages("stringi", lib="~/AppData/Local/R/win-library/4.2")
remove.packages("cli", lib="~/AppData/Local/R/win-library/4.2")
remove.packages("e1071", lib="~/AppData/Local/R/win-library/4.2")
remove.packages("units", lib="~/AppData/Local/R/win-library/4.2")
remove.packages("classInt", lib="~/AppData/Local/R/win-library/4.2")
remove.packages("sf", lib="~/AppData/Local/R/win-library/4.2")
remove.packages("purrr", lib="~/AppData/Local/R/win-library/4.2")
devtools::install_github("https://github.com/tgoodbody/sgsR")
remove.packages("sgsR", lib="~/AppData/Local/R/win-library/4.2")
devtools::install_github("https://github.com/tgoodbody/sgsR")
remove.packages("Rcpp", lib="~/AppData/Local/R/win-library/4.2")
remove.packages("terra", lib="~/AppData/Local/R/win-library/4.2")
remove.packages("fansi", lib="~/AppData/Local/R/win-library/4.2")
remove.packages("tidyr", lib="~/AppData/Local/R/win-library/4.2")
devtools::install_github("https://github.com/tgoodbody/sgsR")
warnings()
install.packages("terra")
install.packages("terra")
devtools::install_github("https://github.com/tgoodbody/sgsR")
install.packages("cli")
devtools::install_github("https://github.com/tgoodbody/sgsR")
install.packages("Rcpp")
devtools::install_github("https://github.com/tgoodbody/sgsR")
install.packages("stringi")
devtools::install_github("https://github.com/tgoodbody/sgsR")
install.packages("purrr")
devtools::install_github("https://github.com/tgoodbody/sgsR")
install.packages("terra")
install.packages("terra")
devtools::install_github("https://github.com/tgoodbody/sgsR")
library(tidyverse)
library(terra)
library(sf)
library(bcmaps)
library(sgsR)
#### setup ----
terraOptions(
memfrac = 0.75,
tempdir = "E:\\temp",
todisk = T,
progress = 100
)
options(scipen = 999)
source(here::here("scripts", "get_keys.R"))
vlce <- rast("G:/mosaiced/VLCE2.0/LC_Class_HMM_2015_v20_v20.dat")
bcb <- bcmaps::bc_bound() %>%
vect()
bcb_rast <- bcb %>%
rasterize(y = vlce) %>%
crop(bcb)
vlce <- crop(vlce, bcb_rast) %>%
mask(bcb_rast)
focal_rasts <- focal_loc %>%
list.files(pattern = ".tif$", full.names = T)
focal_loc <- "G:/mosaiced/focal"
focal_rasts <- focal_loc %>%
list.files(pattern = ".tif$", full.names = T)
focal_for <- focal_rasts %>%
str_subset(pattern = "forests") %>%
rast()
focal_lor <- focal_rasts %>%
str_subset(pattern = "loreys") %>%
rast()
focal_cov <- focal_rasts %>%
str_subset(pattern = "2m") %>%
rast()
change <- rast("G:\\mosaiced\\change_attribution\\Attribution_v2.dat")
change_rcl <- keys$disturbance %>%
mutate(class_name = ifelse(class_val > 0 &
class_val <= 4, 1, NA)) %>%
select(class_val, class_name) %>%
as.matrix(ncol = 2)
change_mask <- classify(change, change_rcl)
bec <- bcmaps::bec()
zones <- keys$bec %>%
pull(zone)
dir.create(here::here("data", "samples"),
recursive = T,
showWarnings = F)
zoi <- "CDF"
zoi <- "CWH"
save_name_bec <-
here::here("data", "samples", "bec", paste0(zoi, ".shp"))
print(save_name_bec)
save_name_vlce <-
here::here("data", "samples", "vlce", paste0(zoi, "-vlce.shp"))
print(save_name_vlce)
dir.create(dirname(save_name_bec),
recursive = T,
showWarnings = F)
dir.create(dirname(save_name_vlce),
recursive = T,
showWarnings = F)
zoi_rast <- bec %>%
filter(ZONE == zoi) %>%
rasterize(y = vlce, field = "ZONE") %>%
mask(bcb_rast) %>%
trim()
plot(zoi_rast, col = "green")
focal_for_mask <- focal_for %>%
crop(zoi_rast)
focal_lor_mask <- focal_lor %>%
crop(zoi_rast)
focal_cov_mask <- focal_cov %>%
crop(zoi_rast)
change_mask_zoi <- change_mask %>%
crop(zoi_rast)
masked <- zoi_rast %>%
mask(focal_for_mask) %>%
mask(focal_lor_mask) %>%
mask(focal_cov_mask) %>%
mask(change_mask_zoi)
names(masked) <- "strata"
print("vlce sampling")
vlce_masked <- vlce %>%
crop(masked) %>%
mask(masked)
names(vlce_masked) <- "strata"
plot(vlce_masked)
vlce_interest_samples <-
sample_strat(
sraster = vlce_masked,
nSamp = 500,
mindist = 1000,
method = "random" # my focal analysis accounts for the quinnec method from sgsR
)
bec <- bcmaps::bec()
zones <- keys$bec %>%
pull(zone)
dir.create(here::here("data", "samples"),
recursive = T,
showWarnings = F)
for (zoi in zones) {
save_name_bec <-
here::here("data", "samples", "bec", paste0(zoi, ".shp"))
print(save_name_bec)
save_name_vlce <-
here::here("data", "samples", "vlce", paste0(zoi, "-vlce.shp"))
print(save_name_vlce)
dir.create(dirname(save_name_bec),
recursive = T,
showWarnings = F)
dir.create(dirname(save_name_vlce),
recursive = T,
showWarnings = F)
zoi_rast <- bec %>%
filter(ZONE == zoi) %>%
rasterize(y = vlce, field = "ZONE") %>%
mask(bcb_rast) %>%
trim()
plot(zoi_rast, col = "green")
focal_for_mask <- focal_for %>%
crop(zoi_rast)
focal_lor_mask <- focal_lor %>%
crop(zoi_rast)
focal_cov_mask <- focal_cov %>%
crop(zoi_rast)
change_mask_zoi <- change_mask %>%
crop(zoi_rast)
masked <- zoi_rast %>%
mask(focal_for_mask) %>%
mask(focal_lor_mask) %>%
mask(focal_cov_mask) %>%
mask(change_mask_zoi)
names(masked) <- "strata"
print("vlce sampling")
vlce_masked <- vlce %>%
crop(masked) %>%
mask(masked)
names(vlce_masked) <- "strata"
plot(vlce_masked)
vlce_interest_samples <-
sample_strat(
sraster = vlce_masked,
nSamp = 500,
mindist = 1000,
method = "random" # my focal analysis accounts for the quinnec method from sgsR
)
write_sf(vlce_interest_samples, save_name_vlce)
# print("bec sampling")
#
# bec_interest_samples <-
#   sample_srs(raster = masked,
#              nSamp = 3000,
#              mindist = 1000) %>%
#   mutate(zone = zoi)
#
# write_sf(bec_interest_samples, save_name_bec)
}
install.packages("terra")
install.packages("terra")
install.packages("Rcpp")
remove.packages("Rcpp", lib="~/AppData/Local/R/win-library/4.2")
devtools::install_github("https://github.com/tgoodbody/sgsR")
install.packages("Rcpp")
devtools::install_github("https://github.com/tgoodbody/sgsR")
# Chunk 1: setup
library(tidyverse)
library(terra)
library(sf)
library(bcmaps)
library(sgsR)
library(exactextractr)
#### setup ----
terraOptions(
memfrac = 0.75,
tempdir = "E:\\temp",
todisk = T,
progress = 100
)
options(scipen = 999)
source(here::here("scripts", "get_keys.R"))
# Chunk 2: loads
vlce <- rast("G:/mosaiced/VLCE2.0/LC_Class_HMM_2015_v20_v20.dat")
bcb <- bcmaps::bc_bound() %>%
vect()
bcb_rast <- bcb %>%
rasterize(y = vlce) %>%
crop(bcb)
vlce <- crop(vlce, bcb_rast) %>%
mask(bcb_rast)
# Chunk 3: run-focal
focal_loc <- "G:/mosaiced/focal"
if (length(list.files(focal_loc)) != 11) {
print("running focal analysis on vlce and 10 structure variables")
rmarkdown::render(here::here("scripts", "1_bc_focal_processing.qmd"))
} else {
print("focal analysis already done")
}
# Chunk 4: run-sample
sample_loc <- here::here("data", "samples")
list.files(sample_loc, pattern = ".shp$")
rmarkdown::render(here::here("scripts", "2_sampling.qmd"))
focal_rasts <- focal_loc %>%
list.files(pattern = ".tif$", full.names = T)
focal_for <- focal_rasts %>%
str_subset(pattern = "forests") %>%
rast()
focal_lor <- focal_rasts %>%
str_subset(pattern = "loreys") %>%
rast()
focal_cov <- focal_rasts %>%
str_subset(pattern = "2m") %>%
rast()
change <- rast("G:\\mosaiced\\change_attribution\\Attribution_v2.dat")
change_rcl <- keys$disturbance %>%
mutate(class_name = ifelse(class_val > 0 &
class_val <= 4, 1, NA)) %>%
select(class_val, class_name) %>%
as.matrix(ncol = 2)
change_mask <- classify(change, change_rcl)
bec <- bcmaps::bec()
zones <- keys$bec %>%
pull(zone)
dir.create(here::here("data", "samples"),
recursive = T,
showWarnings = F)
for (zoi in zones) {
save_name_bec <-
here::here("data", "samples", "bec", paste0(zoi, ".shp"))
print(save_name_bec)
save_name_vlce <-
here::here("data", "samples", "vlce", paste0(zoi, "-vlce.shp"))
print(save_name_vlce)
dir.create(dirname(save_name_bec),
recursive = T,
showWarnings = F)
dir.create(dirname(save_name_vlce),
recursive = T,
showWarnings = F)
zoi_rast <- bec %>%
filter(ZONE == zoi) %>%
rasterize(y = vlce, field = "ZONE") %>%
mask(bcb_rast) %>%
trim()
plot(zoi_rast, col = "green")
focal_for_mask <- focal_for %>%
crop(zoi_rast)
focal_lor_mask <- focal_lor %>%
crop(zoi_rast)
focal_cov_mask <- focal_cov %>%
crop(zoi_rast)
change_mask_zoi <- change_mask %>%
crop(zoi_rast)
masked <- zoi_rast %>%
mask(focal_for_mask) %>%
mask(focal_lor_mask) %>%
mask(focal_cov_mask) %>%
mask(change_mask_zoi)
names(masked) <- "strata"
print("vlce sampling")
vlce_masked <- vlce %>%
crop(masked) %>%
mask(masked)
names(vlce_masked) <- "strata"
plot(vlce_masked)
vlce_interest_samples <-
sample_strat(
sraster = vlce_masked,
nSamp = 500,
mindist = 1000,
method = "random", # my focal analysis accounts for the quinnec method from sgsR
allocation = "equal"
)
write_sf(vlce_interest_samples, save_name_vlce, overwrite = T)
print("bec sampling")
bec_interest_samples <-
sample_srs(raster = masked,
nSamp = 3000,
mindist = 1000) %>%
mutate(zone = zoi)
write_sf(bec_interest_samples, save_name_bec, overwrite = T)
}
